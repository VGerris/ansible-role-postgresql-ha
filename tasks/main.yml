---
- name: Load OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution_release }}.yml"
    - "../vars/empty.yml"
  tags: [always]

#
# Override defaults/main.yml with PostgreSQL version specific values
#
- name: Load PG version specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "../vars/postgresql_{{ postgresql_version }}.yml"
    - "../vars/empty.yml"
  tags: [always]

- name: Install PostgreSQL with apt
  import_tasks: install_apt.yml
  when: ansible_pkg_mgr == "apt"
  tags: [postgresql, postgresql-install]

- name: Install PostgreSQL extensions
  import_tasks: extensions.yml
  tags: [postgresql, postgresql-extensions]

- name: Detect Repmgr primary
  import_tasks: extensions/detect_repmgr_primary.yml
  when: postgresql_ext_install_repmgr and ansible_service_mgr == 'systemd'
  tags: [postgresql, postgresql-extensions]

- name: Install Foreign Data Wrappers
  import_tasks: fdw.yml
  tags: [postgresql, postgresql-fdw]

- name: Configure PostgreSQL
  import_tasks: configure.yml
  tags: [postgresql, postgresql-configure]

- name: Create PostgreSQL users
  import_tasks: users.yml
  tags: [postgresql, postgresql-users]

- name: Create PostgreSQL databases
  import_tasks: databases.yml
  tags: [postgresql, postgresql-databases]

- name: Create PostgreSQL schemass
  import_tasks: schemas.yml
  tags: [postgresql, postgresql-schemas]

- name: Configure PostgreSQL users privileges
  import_tasks: users_privileges.yml
  tags: [postgresql, postgresql-users]

- name: Configure Repmgr
  import_tasks: extensions/configure_repmgr.yml
  when: postgresql_ext_install_repmgr and ansible_service_mgr == 'systemd'
  tags: [postgresql, postgresql-extensions]

- name: Check PostgreSQL version mismatch
  import_tasks: check_pg_version_mismatch.yml
  tags: [postgresql, postgresql-version-mismatch]
