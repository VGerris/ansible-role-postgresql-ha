---
- hosts: pgcluster
  gather_facts: yes
  become: yes
  tasks:
    - name: Run apt update via shell # Until https://github.com/ansible/ansible/issues/28991
      shell: apt update
      become: yes
  
  roles:
    - name: postgresql
      vars:
        # Required configuration items
        # postgresql_logical_decoding_work_mem: 64MB
        # postgresql_maintenance_io_concurrency: 10
        # postgresql_wal_skip_threshold: 2MB
        # postgresql_wal_keep_size: 0   # in megabytes; 0 disables (>= 13)
        # postgresql_max_slot_wal_keep_size:  1   # in megabytes; -1 disables (>= 13)
        # postgresql_wal_receiver_create_temp_slot: off # create temp slot if primary_slot_name is not set
        # postgresql_enable_incremental_sort:        on    # (>= 13)
        # postgresql_log_min_duration_sample:    -1       # (>= 13)
        # postgresql_stats_temp_directory: "pg_stat_tmp" # (<= 13)
        repmgr_target_group: pgcluster
        repmgr_master: pgsql01
        repmgr_failover: automatic
        repmgr_promote_command: /usr/bin/repmgr standby promote -f /etc/repmgr.conf --log-to-file
        repmgr_follow_command: /usr/bin/repmgr standby follow -f /etc/repmgr.conf --log-to-file --upstream-node-id=%n
        repmgr_monitoring_history: "yes"
        repmgr_connection_check_type: query
        repmgr_log_level: DEBUG
        repmgr_reconnect_attempts: 2
        repmgr_reconnect_interval: 10
        # Basic settings
        postgresql_version: 15
        postgresql_cluster_name: main
        postgresql_cluster_reset: false # TODO: Needs to be tested for repmgr
        postgresql_listen_addresses: "*"
        postgresql_port: 5432
        postgresql_wal_level: "replica"
        postgresql_max_wal_senders: 10
        postgresql_max_replication_slots: 10
        postgresql_wal_keep_segments: 300
        postgresql_hot_standby: on
        postgresql_archive_mode: on
        postgresql_archive_command: "test ! -f /tmp/%f && cp %p /tmp/%f"
        postgresql_ext_install_repmgr: yes
        postgresql_shared_preload_libraries:
          - repmgr
        # postgresql logging 
        postgresql_log_checkpoints: on
        postgresql_log_connections: on
        postgresql_log_disconnections: on
        postgresql_log_temp_files: 0
        postgresql_log_recovery_conflict_waits: off # (>= 14)
        # pg_hba.conf
        postgresql_pg_hba_custom:
          - { type: "host", database: "all", user: "all", address: "0.0.0.0/0", method: "md5" }
          - { type: "host", database: "replication", user: "{{ repmgr_user }}", address: "0.0.0.0/0", method: "trust" }  
          - { type: "host", database: "replication", user: "{{ repmgr_user }}", address: "127.0.0.1/32", method: "trust" }  
          - { type: "host", database: "{{ repmgr_database }}", user: "{{ repmgr_user }}", address: "127.0.0.1/32", method: "trust" }  
          - { type: "host", database: "{{ repmgr_database }}", user: "{{ repmgr_user }}", address: "0.0.0.0/0", method: "trust" }  
        # Databases
        postgresql_databases:
          - name: "{{ repmgr_database }}"
            owner: "{{ repmgr_user }}"
            encoding: "UTF-8"
          - name: testdb
            owner: admin
            encoding: "UTF-8"
        # Users
        postgresql_users:
          - name: "{{ repmgr_user }}"
            pass: "{{ repmgr_password }}"
          - name: admin
            pass: secret # postgresql >=10 does not accept unencrypted passwords
            encrypted: yes
        # Roles
        postgresql_user_privileges:
          - name: "{{ repmgr_user }}"
            db: "{{ repmgr_database }}"
            priv: "ALL"
            role_attr_flags: "SUPERUSER,REPLICATION"
          - name: admin
            db: testdb
            role_attr_flags: "SUPERUSER"
